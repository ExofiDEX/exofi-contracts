{
  "address": "0x2f10B2756164e72ED6c803e0B1511C56C5D72cfb",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Enter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Leave",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "enter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "tokenInit",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "leave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe62a3a9c3c218d45536c0cbf6040cbf721e20710e5b1c889a547b090b5ba786d",
  "receipt": {
    "to": null,
    "from": "0x1799e996EC140dC66680bb6e6AC331e40B827fe1",
    "contractAddress": "0x2f10B2756164e72ED6c803e0B1511C56C5D72cfb",
    "transactionIndex": 30,
    "gasUsed": "1359887",
    "logsBloom": "0x
    "blockHash": "0x51e261bc7b0b848c4fd268646f6607ea2b7d8e9f36bc6eea360cf3ea905028f8",
    "transactionHash": "0xe62a3a9c3c218d45536c0cbf6040cbf721e20710e5b1c889a547b090b5ba786d",
    "logs": [],
    "blockNumber": 7639863,
    "cumulativeGasUsed": "18099675",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "f1ca8be4fa72d926b1bfb4133b62a6e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Enter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Leave\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"tokenInit\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when the allowance of a {spender} for an {owner} is set to a new value. NOTE: {value} may be zero.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Emitted when {value} tokens are moved from one address {from} to another {to}. NOTE: {value} may be zero.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"notice\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"notice\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"notice\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"notice\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"notice\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Planet.sol\":\"Planet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"@exoda/contracts/interfaces/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC20 interface.\\n * @author Ing. Michael Goldfinger\\n * @notice Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20\\n{\\n\\t/**\\n\\t * @notice Emitted when the allowance of a {spender} for an {owner} is set to a new value.\\n\\t *\\n\\t * NOTE: {value} may be zero.\\n\\t * @param owner (indexed) The owner of the tokens.\\n\\t * @param spender (indexed) The spender for the tokens.\\n\\t * @param value The amount of tokens that got an allowance.\\n\\t */\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n\\t/**\\n\\t * @notice Emitted when {value} tokens are moved from one address {from} to another {to}.\\n\\t *\\n\\t * NOTE: {value} may be zero.\\n\\t * @param from (indexed) The origin of the transfer.\\n\\t * @param to (indexed) The target of the transfer.\\n\\t * @param value The amount of tokens that got transfered.\\n\\t */\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\n\\n\\t/**\\n\\t* @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n\\t*\\n\\t* Returns a boolean value indicating whether the operation succeeded.\\n\\t*\\n\\t* IMPORTANT: Beware that changing an allowance with this method brings the risk\\n\\t* that someone may use both the old and the new allowance by unfortunate\\n\\t* transaction ordering. One possible solution to mitigate this race\\n\\t* condition is to first reduce the spender's allowance to 0 and set the\\n\\t* desired value afterwards:\\n\\t* https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n\\t*\\n\\t* Emits an {Approval} event.\\n\\t*/\\n\\tfunction approve(address spender, uint256 amount) external returns (bool);\\n\\n\\t/**\\n\\t* @dev Moves `amount` tokens from the caller's account to `to`.\\n\\t*\\n\\t* Returns a boolean value indicating whether the operation succeeded.\\n\\t*\\n\\t* Emits a {Transfer} event.\\n\\t*/\\n\\tfunction transfer(address to, uint256 amount) external returns (bool);\\n\\n\\t/**\\n\\t* @dev Moves `amount` tokens from `from` to `to` using the allowance mechanism.\\n\\t* `amount` is then deducted from the caller's allowance.\\n\\t*\\n\\t* Returns a boolean value indicating whether the operation succeeded.\\n\\t*\\n\\t* Emits a {Transfer} event.\\n\\t*/\\n\\tfunction transferFrom(address from, address to, uint256 amount) external returns (bool);\\n\\n\\t/**\\n\\t* @dev Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}.\\n\\t* This is zero by default.\\n\\t*\\n\\t* This value changes when {approve}, {increaseAllowance}, {decreseAllowance} or {transferFrom} are called.\\n\\t*/\\n\\tfunction allowance(address owner, address spender) external view returns (uint256);\\n\\n\\t/**\\n\\t* @dev Returns the amount of tokens owned by `account`.\\n\\t*/\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n\\n\\t/**\\n\\t* @dev Returns the amount of tokens in existence.\\n\\t*/\\n\\tfunction totalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4f3061b0e883d9105a5ba012c092ed76b8bd8d7866274e084028df9a7d65d70e\",\"license\":\"MIT\"},\"@exoda/contracts/interfaces/token/ERC20/extensions/IERC20AltApprove.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title ERC20Metadata interface.\\n/// @author Ing. Michael Goldfinger\\n/// @notice Interface for an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\\n/// @dev This is not part of the ERC20 specification.\\ninterface IERC20AltApprove\\n{\\n\\t/**\\n\\t* @notice Atomically decreases the allowance granted to `spender` by the caller.\\n\\t*\\n\\t* This is an alternative to {approve} that can be used as a mitigation for\\n\\t* problems described in {IERC20-approve}.\\n\\t*\\n\\t* Emits an {Approval} event indicating the updated allowance.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `spender` cannot be the zero address.\\n\\t* - `spender` must have allowance for the caller of at least\\n\\t* `subtractedValue`.\\n\\t*/\\n\\tfunction decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\n\\n\\t/**\\n\\t* @notice Atomically increases the allowance granted to `spender` by the caller.\\n\\t*\\n\\t* This is an alternative to {approve} that can be used as a mitigation for\\n\\t* problems described in {IERC20-approve}.\\n\\t*\\n\\t* Emits an {Approval} event indicating the updated allowance.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `spender` cannot be the zero address.\\n\\t*/\\n\\tfunction increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\n}\\n\",\"keccak256\":\"0xf5d46a19d6bbf90f6ff1fcaae366d803b9716d9f87f6ca94c73316de6769c71a\",\"license\":\"MIT\"},\"@exoda/contracts/interfaces/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/// @title ERC20Metadata interface.\\n/// @author Ing. Michael Goldfinger\\n/// @notice Interface for the optional metadata functions from the ERC20 standard.\\ninterface IERC20Metadata is IERC20\\n{\\n\\t/// @notice Returns the name of the token.\\n\\t/// @return The token name.\\n\\tfunction name() external view returns (string memory);\\n\\n\\t/// @notice Returns the symbol of the token.\\n\\t/// @return The symbol for the token.\\n\\tfunction symbol() external view returns (string memory);\\n\\n\\t/// @notice Returns the decimals of the token.\\n\\t/// @return The decimals for the token.\\n\\tfunction decimals() external pure returns (uint8);\\n}\\n\",\"keccak256\":\"0x5a794350da4c10ee1fe18ca092e8984cf4ca122f71519452cd0b6b77d9dffbae\",\"license\":\"MIT\"},\"@exoda/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/token/ERC20/extensions/IERC20AltApprove.sol\\\";\\nimport \\\"../../interfaces/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n* @notice Implementation of the {IERC20Metadata} interface.\\n* The IERC20Metadata interface extends the IERC20 interface.\\n*\\n* This implementation is agnostic to the way tokens are created. This means\\n* that a supply mechanism has to be added in a derived contract using {_mint}.\\n* For a generic mechanism see Open Zeppelins {ERC20PresetMinterPauser}.\\n*\\n* TIP: For a detailed writeup see our guide\\n* https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n* to implement supply mechanisms].\\n*\\n* We have followed general OpenZeppelin Contracts guidelines: functions revert\\n* instead returning `false` on failure. This behavior is nonetheless\\n* conventional and does not conflict with the expectations of ERC20\\n* applications.\\n*\\n* Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n* This allows applications to reconstruct the allowance for all accounts just\\n* by listening to said events. Other implementations of the EIP may not emit\\n* these events, as it isn't required by the specification.\\n*\\n* Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n* functions have been added to mitigate the well-known issues around setting\\n* allowances. See {IERC20-approve}.\\n*/\\ncontract ERC20 is Context, IERC20AltApprove, IERC20Metadata\\n{\\n\\tuint256 internal _totalSupply;\\n\\tmapping(address => uint256) internal _balances;\\n\\tmapping(address => mapping(address => uint256)) private _allowances;\\n\\tstring private _name;\\n\\tstring private _symbol;\\n\\n\\t/**\\n\\t* @notice Sets the values for {name} and {symbol}.\\n\\t*\\n\\t* The default value of {decimals} is 18. To select a different value for\\n\\t* {decimals} you should overload it.\\n\\t*\\n\\t* All two of these values are immutable: they can only be set once during\\n\\t* construction.\\n\\t*/\\n\\tconstructor(string memory tokenName, string memory tokenSymbol)\\n\\t{\\n\\t\\t_name = tokenName;\\n\\t\\t_symbol = tokenSymbol;\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-approve}.\\n\\t*\\n\\t* NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n\\t* `transferFrom`. This is semantically equivalent to an infinite approval.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `spender` cannot be the zero address.\\n\\t*/\\n\\tfunction approve(address spender, uint256 amount) override public virtual returns (bool)\\n\\t{\\n\\t\\taddress owner = _msgSender();\\n\\t\\t_approve(owner, spender, amount);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t* @notice Atomically decreases the allowance granted to `spender` by the caller.\\n\\t*\\n\\t* This is an alternative to {approve} that can be used as a mitigation for\\n\\t* problems described in {IERC20-approve}.\\n\\t*\\n\\t* Emits an {Approval} event indicating the updated allowance.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `spender` cannot be the zero address.\\n\\t* - `spender` must have allowance for the caller of at least\\n\\t* `subtractedValue`.\\n\\t*/\\n\\tfunction decreaseAllowance(address spender, uint256 subtractedValue) override public virtual returns (bool)\\n\\t{\\n\\t\\taddress owner = _msgSender();\\n\\t\\tuint256 currentAllowance = allowance(owner, spender);\\n\\t\\trequire(currentAllowance >= subtractedValue, \\\"ERC20: reduced allowance below 0\\\");\\n\\t\\tunchecked {\\n\\t\\t\\t_approve(owner, spender, currentAllowance - subtractedValue);\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t* @notice Atomically increases the allowance granted to `spender` by the caller.\\n\\t*\\n\\t* This is an alternative to {approve} that can be used as a mitigation for\\n\\t* problems described in {IERC20-approve}.\\n\\t*\\n\\t* Emits an {Approval} event indicating the updated allowance.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `spender` cannot be the zero address.\\n\\t*/\\n\\tfunction increaseAllowance(address spender, uint256 addedValue) override public virtual returns (bool)\\n\\t{\\n\\t\\taddress owner = _msgSender();\\n\\t\\t_approve(owner, spender, allowance(owner, spender) + addedValue);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-transfer}.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `to` cannot be the zero address.\\n\\t* - the caller must have a balance of at least `amount`.\\n\\t*/\\n\\tfunction transfer(address to, uint256 amount) override public virtual returns (bool)\\n\\t{\\n\\t\\taddress owner = _msgSender();\\n\\t\\t_transfer(owner, to, amount);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-transferFrom}.\\n\\t*\\n\\t* Emits an {Approval} event indicating the updated allowance. This is not\\n\\t* required by the EIP. See the note at the beginning of {ERC20}.\\n\\t*\\n\\t* NOTE: Does not update the allowance if the current allowance is the maximum `uint256`.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `from` and `to` cannot be the zero address.\\n\\t* - `from` must have a balance of at least `amount`.\\n\\t* - the caller must have allowance for ``from``'s tokens of at least\\n\\t* `amount`.\\n\\t*/\\n\\tfunction transferFrom(address from, address to, uint256 amount) override public virtual returns (bool)\\n\\t{\\n\\t\\taddress spender = _msgSender();\\n\\t\\t_spendAllowance(from, spender, amount);\\n\\t\\t_transfer(from, to, amount);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-allowance}.\\n\\t*/\\n\\tfunction allowance(address owner, address spender) override public view virtual returns (uint256)\\n\\t{\\n\\t\\treturn _allowances[owner][spender];\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-balanceOf}.\\n\\t*/\\n\\tfunction balanceOf(address account) override public view virtual returns (uint256)\\n\\t{\\n\\t\\treturn _balances[account];\\n\\t}\\n\\n\\t/**\\n\\t* @notice Returns the name of the token.\\n\\t*/\\n\\tfunction name() override public view virtual returns (string memory)\\n\\t{\\n\\t\\treturn _name;\\n\\t}\\n\\n\\t/**\\n\\t* @notice Returns the symbol of the token, usually a shorter version of the\\n\\t* name.\\n\\t*/\\n\\tfunction symbol() override public view virtual returns (string memory)\\n\\t{\\n\\t\\treturn _symbol;\\n\\t}\\n\\n\\t/**\\n\\t* @notice See {IERC20-totalSupply}.\\n\\t*/\\n\\tfunction totalSupply() override public view virtual returns (uint256)\\n\\t{\\n\\t\\treturn _totalSupply;\\n\\t}\\n\\n\\t/**\\n\\t* @notice Returns the number of decimals used to get its user representation.\\n\\t* For example, if `decimals` equals `2`, a balance of `505` tokens should\\n\\t* be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n\\t*\\n\\t* Tokens usually opt for a value of 18, imitating the relationship between\\n\\t* Ether and Wei. This is the value {ERC20} uses, unless this function is\\n\\t* overridden;\\n\\t*\\n\\t* NOTE: This information is only used for _display_ purposes: it in\\n\\t* no way affects any of the arithmetic of the contract, including\\n\\t* {IERC20-balanceOf} and {IERC20-transfer}.\\n\\t*/\\n\\tfunction decimals() override public pure virtual returns (uint8)\\n\\t{\\n\\t\\treturn 18;\\n\\t}\\n\\n\\t/**\\n\\t* @notice Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n\\t*\\n\\t* This internal function is equivalent to `approve`, and can be used to\\n\\t* e.g. set automatic allowances for certain subsystems, etc.\\n\\t*\\n\\t* Emits an {Approval} event.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `owner` cannot be the zero address.\\n\\t* - `spender` cannot be the zero address.\\n\\t*/\\n\\tfunction _approve(address owner, address spender, uint256 amount) internal virtual\\n\\t{\\n\\t\\trequire(owner != address(0), \\\"ERC20: approve from address(0)\\\");\\n\\t\\trequire(spender != address(0), \\\"ERC20: approve to address(0)\\\");\\n\\n\\t\\t_allowances[owner][spender] = amount;\\n\\t\\temit Approval(owner, spender, amount);\\n\\t}\\n\\n\\t/**\\n\\t* @notice Destroys `amount` tokens from `account`, reducing the\\n\\t* total supply.\\n\\t*\\n\\t* Emits a {Transfer} event with `to` set to the zero address.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `account` cannot be the zero address.\\n\\t* - `account` must have at least `amount` tokens.\\n\\t*/\\n\\tfunction _burn(address account, uint256 amount) internal virtual {\\n\\t\\trequire(account != address(0), \\\"ERC20: burn from address(0)\\\");\\n\\n\\t\\tuint256 accountBalance = _balances[account];\\n\\t\\trequire(accountBalance >= amount, \\\"ERC20: burn exceeds balance\\\");\\n\\t\\tunchecked {\\n\\t\\t\\t_balances[account] = accountBalance - amount;\\n\\t\\t}\\n\\t\\t_totalSupply -= amount;\\n\\n\\t\\temit Transfer(account, address(0), amount);\\n\\t}\\n\\n\\t/** @notice Creates `amount` tokens and assigns them to `account`, increasing\\n\\t* the total supply.\\n\\t*\\n\\t* Emits a {Transfer} event with `from` set to the zero address.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `account` cannot be the zero address.\\n\\t*/\\n\\tfunction _mint(address account, uint256 amount) internal virtual\\n\\t{\\n\\t\\trequire(account != address(0), \\\"ERC20: mint to address(0)\\\");\\n\\n\\t\\t_totalSupply += amount;\\n\\t\\t_balances[account] += amount;\\n\\t\\temit Transfer(address(0), account, amount);\\n\\t}\\n\\n\\t/**\\n\\t* @notice Updates `owner` s allowance for `spender` based on spent `amount`.\\n\\t*\\n\\t* Does not update the allowance amount in case of infinite allowance.\\n\\t* Revert if not enough allowance is available.\\n\\t*\\n\\t* Might emit an {Approval} event.\\n\\t*/\\n\\tfunction _spendAllowance(address owner, address spender, uint256 amount) internal virtual\\n\\t{\\n\\t\\tuint256 currentAllowance = allowance(owner, spender);\\n\\t\\tif (currentAllowance != type(uint256).max) {\\n\\t\\t\\trequire(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n\\t\\t\\tunchecked {\\n\\t\\t\\t\\t_approve(owner, spender, currentAllowance - amount);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t* @notice Moves `amount` of tokens from `sender` to `recipient`.\\n\\t*\\n\\t* This internal function is equivalent to {transfer}, and can be used to\\n\\t* e.g. implement automatic token fees, slashing mechanisms, etc.\\n\\t*\\n\\t* Emits a {Transfer} event.\\n\\t*\\n\\t* Requirements:\\n\\t*\\n\\t* - `from` cannot be the zero address.\\n\\t* - `to` cannot be the zero address.\\n\\t* - `from` must have a balance of at least `amount`.\\n\\t*/\\n\\tfunction _transfer(address from, address to, uint256 amount) internal virtual\\n\\t{\\n\\t\\trequire(from != address(0), \\\"ERC20: transfer from address(0)\\\");\\n\\t\\trequire(to != address(0), \\\"ERC20: transfer to address(0)\\\");\\n\\n\\t\\tuint256 fromBalance = _balances[from];\\n\\t\\trequire(fromBalance >= amount, \\\"ERC20: transfer exceeds balance\\\");\\n\\t\\tunchecked {\\n\\t\\t\\t_balances[from] = fromBalance - amount;\\n\\t\\t}\\n\\t\\t_balances[to] += amount;\\n\\n\\t\\temit Transfer(from, to, amount);\\n\\t}\\n}\\n\",\"keccak256\":\"0x198e112cc4721a4b8c8d85b2e8be7e22f8c134bc66639971e3e7df702bd2da8e\",\"license\":\"MIT\"},\"@exoda/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../../interfaces/token/ERC20/IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20\\n{\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal\\n    {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal\\n    {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal\\n    {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require((value == 0) || (token.allowance(address(this), spender) == 0), \\\"SafeERC20: exploitable approve\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal\\n    {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal\\n    {\\n        unchecked\\n        {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: reduced allowance <0\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private\\n    {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0)\\n        {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 call failed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x00fc0fe2fe04c3f13fe89d84893559b5c7cd0d2f05fbc8cbbec86dbf187c5b19\",\"license\":\"MIT\"},\"@exoda/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address\\n{\\n    /* solhint-disable max-line-length */\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n     /* solhint-enable max-line-length */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory)\\n    {\\n        return functionCallWithValue(target, data, 0, \\\"Address: call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory)\\n    {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory)\\n    {\\n        return functionCallWithValue(target, data, value, \\\"Address: call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory)\\n    {\\n        require(address(this).balance >= value, \\\"Address: balance to low for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) internal pure returns (bytes memory)\\n    {\\n        if (success)\\n        {\\n            return returndata;\\n        } else\\n        {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly\\n                {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            }\\n            else\\n            {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x604778c14ede98c4774b74bcc43f066778c602371bc5a603e7477d95d25546d1\",\"license\":\"MIT\"},\"@exoda/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n* @notice Provides information about the current execution context, including the\\n* sender of the transaction and its data. While these are generally available\\n* via msg.sender and msg.data, they should not be accessed in such a direct\\n* manner, since when dealing with meta-transactions the account sending and\\n* paying for execution may not be the actual sender (as far as an application\\n* is concerned).\\n*\\n* This contract is only required for intermediate, library-like contracts.\\n*/\\nabstract contract Context\\n{\\n\\t/// @notice returns the sender of the transaction.\\n\\t/// @return The sender of the transaction.\\n\\tfunction _msgSender() internal view virtual returns (address)\\n\\t{\\n\\t\\treturn msg.sender;\\n\\t}\\n\\n\\t/// @notice returns the data of the transaction.\\n\\t/// @return The data of the transaction.\\n\\tfunction _msgData() internal view virtual returns (bytes calldata)\\n\\t{\\n\\t\\treturn msg.data;\\n\\t}\\n}\\n\",\"keccak256\":\"0xce68a1ae85d9c12dba94f20a2af4f1eeeb187c4631e663a7d8181bd5cbf39035\",\"license\":\"MIT\"},\"contracts/Planet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@exoda/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@exoda/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IPlanet.sol\\\";\\n\\ncontract Planet is IPlanet, ERC20\\n{\\n\\tIERC20Metadata private _token;\\n\\taddress private immutable _factory;\\n\\tconstructor() ERC20(\\\"Planet\\\", \\\"GRAVITY\\\")\\n\\t{\\n\\t\\t_factory = _msgSender();\\n\\t}\\n\\n\\t// called once by the factory at time of deployment\\n\\tfunction initialize(IERC20Metadata tokenInit) override external\\n\\t{\\n\\t\\trequire(_msgSender() == _factory, \\\"Planet: FORBIDDEN\\\");\\n\\t\\trequire(address(_token) == address(0), \\\"Planet: Already Initalized\\\");\\n\\t\\t_token = tokenInit;\\n\\t}\\n\\n\\t// Locks Tokens and mints PlanetTokens.\\n\\tfunction enter(uint256 amount, address to) override external\\n\\t{\\n\\t\\t// Mint PlanetToken at 1:1 ratio\\n\\t\\t_mint(to, amount);\\n\\t\\t// Lock Token in the contract\\n\\t\\tSafeERC20.safeTransferFrom(_token, _msgSender(), address(this), amount);\\n\\t\\temit Enter(_msgSender(), amount, to);\\n\\t}\\n\\n\\t// this low-level function should be called from a contract which performs important safety checks\\n\\tfunction leave(uint256 amount, address to) override external\\n\\t{\\n\\t\\t// Burn PlanetToken at 1:1 ratio\\n\\t\\t_burn(_msgSender(), amount);\\n\\t\\t// Transfer Token\\n\\t\\tSafeERC20.safeTransfer(_token, to, amount);\\n\\t\\temit Leave(_msgSender(), amount, to);\\n\\t}\\n\\n\\tfunction token() override view external returns (IERC20Metadata)\\n\\t{\\n\\t\\treturn _token;\\n\\t}\\n\\n\\tfunction name() override(ERC20, IERC20Metadata) public view virtual returns (string memory)\\n\\t{\\n\\t\\treturn string(abi.encodePacked(super.name(), \\\" \\\", _token.symbol()));\\n\\t}\\n}\\n\",\"keccak256\":\"0x9829a776d2c59ed00a3b64831d20496dfdf12a7d11611ceb92ee570e39ae6531\",\"license\":\"MIT\"},\"contracts/interfaces/IPlanet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@exoda/contracts/interfaces/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@exoda/contracts/interfaces/token/ERC20/extensions/IERC20AltApprove.sol\\\";\\n\\ninterface IPlanet is IERC20AltApprove, IERC20Metadata\\n{\\n\\tevent Enter(address indexed sender, uint256 amount, address indexed to);\\n\\tevent Leave(address indexed sender, uint256 amount, address indexed to);\\n\\n\\tfunction enter(uint256 amount, address to) external;\\n\\tfunction leave(uint256 amount, address to) external;\\n\\tfunction initialize(IERC20Metadata tokenInit) external;\\n\\tfunction token() view external returns (IERC20Metadata);\\n}\",\"keccak256\":\"0xf4995ab79b70211e13ac20f262ad72fed3e6539eb44fad459c5789f43484b136\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405180604001604052806006815260200165141b185b995d60d21b815250604051806040016040528060078152602001664752415649545960c81b815250816003908162000062919062000134565b50600462000071828262000134565b506200007d9150503390565b6001600160a01b031660805262000200565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ba57607f821691505b602082108103620000db57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012f57600081815260208120601f850160051c810160208610156200010a5750805b601f850160051c820191505b818110156200012b5782815560010162000116565b5050505b505050565b81516001600160401b038111156200015057620001506200008f565b6200016881620001618454620000a5565b84620000e1565b602080601f831160018114620001a05760008415620001875750858301515b600019600386901b1c1916600185901b1785556200012b565b600085815260208120601f198616915b82811015620001d157888601518255948401946001909101908401620001b0565b5085821015620001f05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516116d56200021c600039600061055b01526116d56000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806395d89b4111610097578063dd62ed3e11610066578063dd62ed3e146101fb578063ea3b9ba114610241578063f29953b714610254578063fc0c546a1461026757600080fd5b806395d89b41146101b8578063a457c2d7146101c0578063a9059cbb146101d3578063c4d66de8146101e657600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261028f565b60405161010f9190611314565b60405180910390f35b61012b61012636600461138a565b610371565b604051901515815260200161010f565b6000545b60405190815260200161010f565b61012b61015b3660046113b6565b61038b565b6040516012815260200161010f565b61012b61017d36600461138a565b6103b1565b61013f6101903660046113f7565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b6101026103fd565b61012b6101ce36600461138a565b61048f565b61012b6101e136600461138a565b61054a565b6101f96101f43660046113f7565b610558565b005b61013f610209366004611414565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b6101f961024f36600461144d565b6106be565b6101f961026236600461144d565b61073f565b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b60606102996107b7565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610306573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261034c91908101906114a1565b60405160200161035d929190611561565b604051602081830303815290604052905090565b60003361037f8185856107c6565b60019150505b92915050565b60003361039985828561092f565b6103a4858585610a06565b60019150505b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061037f90829086906103f89087906115e8565b6107c6565b60606004805461040c906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610438906115fb565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332303a207265647563656420616c6c6f77616e63652062656c6f77203060448201526064015b60405180910390fd5b61053f82868684036107c6565b506001949350505050565b60003361037f818585610a06565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f506c616e65743a20464f5242494444454e0000000000000000000000000000006044820152606401610529565b60055473ffffffffffffffffffffffffffffffffffffffff1615610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506c616e65743a20416c726561647920496e6974616c697a65640000000000006044820152606401610529565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6106c88183610c48565b6005546106ed9073ffffffffffffffffffffffffffffffffffffffff16333085610d60565b60405182815273ffffffffffffffffffffffffffffffffffffffff82169033907feb641848eb69677a74e1293a4a9e0b68f80b85c314209030ea216369d2e1819a906020015b60405180910390a35050565b6107493383610e3c565b60055461076d9073ffffffffffffffffffffffffffffffffffffffff168284610fd5565b60405182815273ffffffffffffffffffffffffffffffffffffffff82169033907f2d134ecd2970b3d310c292bce33f7ea2dc71cb1890b8dd114445d8078a5081db90602001610733565b60606003805461040c906115fb565b73ffffffffffffffffffffffffffffffffffffffff8316610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332303a20617070726f76652066726f6d206164647265737328302900006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff82166108c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f45524332303a20617070726f766520746f2061646472657373283029000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0057818110156109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610529565b610a0084848484036107c6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a207472616e736665722066726f6d2061646472657373283029006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff8216610b00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a207472616e7366657220746f20616464726573732830290000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205481811015610b90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a207472616e7366657220657863656564732062616c616e6365006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220858503905591851681529081208054849290610bd49084906115e8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c3a91815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8216610cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f45524332303a206d696e7420746f2061646472657373283029000000000000006044820152606401610529565b80600080828254610cd691906115e8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290610d109084906115e8565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610733565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610a009085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611030565b73ffffffffffffffffffffffffffffffffffffffff8216610eb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a206275726e2066726f6d206164647265737328302900000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205481811015610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a206275726e20657863656564732062616c616e636500000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120838303905580548391908190610f8590849061164e565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610922565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261102b9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610dba565b505050565b6000611092826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111169092919063ffffffff16565b80519091501561102b57808060200190518101906110b09190611661565b61102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5361666545524332303a2045524332302063616c6c206661696c6564000000006044820152606401610529565b6060611125848460008561112d565b949350505050565b606082471015611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f416464726573733a2062616c616e636520746f206c6f7720666f722063616c6c6044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff85163b611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610529565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112409190611683565b60006040518083038185875af1925050503d806000811461127d576040519150601f19603f3d011682016040523d82523d6000602084013e611282565b606091505b509150915061129282828661129d565b979650505050505050565b606083156112ac5750816103aa565b8251156112bc5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105299190611314565b60005b8381101561130b5781810151838201526020016112f3565b50506000910152565b60208152600082518060208401526113338160408501602087016112f0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461138757600080fd5b50565b6000806040838503121561139d57600080fd5b82356113a881611365565b946020939093013593505050565b6000806000606084860312156113cb57600080fd5b83356113d681611365565b925060208401356113e681611365565b929592945050506040919091013590565b60006020828403121561140957600080fd5b81356103aa81611365565b6000806040838503121561142757600080fd5b823561143281611365565b9150602083013561144281611365565b809150509250929050565b6000806040838503121561146057600080fd5b82359150602083013561144281611365565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156114b357600080fd5b815167ffffffffffffffff808211156114cb57600080fd5b818401915084601f8301126114df57600080fd5b8151818111156114f1576114f1611472565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561153757611537611472565b8160405282815287602084870101111561155057600080fd5b6112928360208301602088016112f0565b600083516115738184602088016112f0565b7f200000000000000000000000000000000000000000000000000000000000000090830190815283516115ad8160018401602088016112f0565b01600101949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610385576103856115b9565b600181811c9082168061160f57607f821691505b602082108103611648577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b81810381811115610385576103856115b9565b60006020828403121561167357600080fd5b815180151581146103aa57600080fd5b600082516116958184602087016112f0565b919091019291505056fea26469706673582212206ac7b2845fe81d6b14fe87e0e88461cbd4615bde326254494368abcc7fddb91864736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806395d89b4111610097578063dd62ed3e11610066578063dd62ed3e146101fb578063ea3b9ba114610241578063f29953b714610254578063fc0c546a1461026757600080fd5b806395d89b41146101b8578063a457c2d7146101c0578063a9059cbb146101d3578063c4d66de8146101e657600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806370a082311461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261028f565b60405161010f9190611314565b60405180910390f35b61012b61012636600461138a565b610371565b604051901515815260200161010f565b6000545b60405190815260200161010f565b61012b61015b3660046113b6565b61038b565b6040516012815260200161010f565b61012b61017d36600461138a565b6103b1565b61013f6101903660046113f7565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b6101026103fd565b61012b6101ce36600461138a565b61048f565b61012b6101e136600461138a565b61054a565b6101f96101f43660046113f7565b610558565b005b61013f610209366004611414565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b6101f961024f36600461144d565b6106be565b6101f961026236600461144d565b61073f565b60055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b60606102996107b7565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610306573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261034c91908101906114a1565b60405160200161035d929190611561565b604051602081830303815290604052905090565b60003361037f8185856107c6565b60019150505b92915050565b60003361039985828561092f565b6103a4858585610a06565b60019150505b9392505050565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061037f90829086906103f89087906115e8565b6107c6565b60606004805461040c906115fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610438906115fb565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45524332303a207265647563656420616c6c6f77616e63652062656c6f77203060448201526064015b60405180910390fd5b61053f82868684036107c6565b506001949350505050565b60003361037f818585610a06565b337f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f506c616e65743a20464f5242494444454e0000000000000000000000000000006044820152606401610529565b60055473ffffffffffffffffffffffffffffffffffffffff1615610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506c616e65743a20416c726561647920496e6974616c697a65640000000000006044820152606401610529565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6106c88183610c48565b6005546106ed9073ffffffffffffffffffffffffffffffffffffffff16333085610d60565b60405182815273ffffffffffffffffffffffffffffffffffffffff82169033907feb641848eb69677a74e1293a4a9e0b68f80b85c314209030ea216369d2e1819a906020015b60405180910390a35050565b6107493383610e3c565b60055461076d9073ffffffffffffffffffffffffffffffffffffffff168284610fd5565b60405182815273ffffffffffffffffffffffffffffffffffffffff82169033907f2d134ecd2970b3d310c292bce33f7ea2dc71cb1890b8dd114445d8078a5081db90602001610733565b60606003805461040c906115fb565b73ffffffffffffffffffffffffffffffffffffffff8316610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332303a20617070726f76652066726f6d206164647265737328302900006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff82166108c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f45524332303a20617070726f766520746f2061646472657373283029000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a0057818110156109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610529565b610a0084848484036107c6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a207472616e736665722066726f6d2061646472657373283029006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff8216610b00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a207472616e7366657220746f20616464726573732830290000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205481811015610b90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a207472616e7366657220657863656564732062616c616e6365006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020526040808220858503905591851681529081208054849290610bd49084906115e8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c3a91815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8216610cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f45524332303a206d696e7420746f2061646472657373283029000000000000006044820152606401610529565b80600080828254610cd691906115e8565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290610d109084906115e8565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610733565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610a009085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611030565b73ffffffffffffffffffffffffffffffffffffffff8216610eb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a206275726e2066726f6d206164647265737328302900000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205481811015610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a206275726e20657863656564732062616c616e636500000000006044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120838303905580548391908190610f8590849061164e565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610922565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261102b9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610dba565b505050565b6000611092826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111169092919063ffffffff16565b80519091501561102b57808060200190518101906110b09190611661565b61102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5361666545524332303a2045524332302063616c6c206661696c6564000000006044820152606401610529565b6060611125848460008561112d565b949350505050565b606082471015611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f416464726573733a2062616c616e636520746f206c6f7720666f722063616c6c6044820152606401610529565b73ffffffffffffffffffffffffffffffffffffffff85163b611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610529565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112409190611683565b60006040518083038185875af1925050503d806000811461127d576040519150601f19603f3d011682016040523d82523d6000602084013e611282565b606091505b509150915061129282828661129d565b979650505050505050565b606083156112ac5750816103aa565b8251156112bc5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105299190611314565b60005b8381101561130b5781810151838201526020016112f3565b50506000910152565b60208152600082518060208401526113338160408501602087016112f0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461138757600080fd5b50565b6000806040838503121561139d57600080fd5b82356113a881611365565b946020939093013593505050565b6000806000606084860312156113cb57600080fd5b83356113d681611365565b925060208401356113e681611365565b929592945050506040919091013590565b60006020828403121561140957600080fd5b81356103aa81611365565b6000806040838503121561142757600080fd5b823561143281611365565b9150602083013561144281611365565b809150509250929050565b6000806040838503121561146057600080fd5b82359150602083013561144281611365565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156114b357600080fd5b815167ffffffffffffffff808211156114cb57600080fd5b818401915084601f8301126114df57600080fd5b8151818111156114f1576114f1611472565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561153757611537611472565b8160405282815287602084870101111561155057600080fd5b6112928360208301602088016112f0565b600083516115738184602088016112f0565b7f200000000000000000000000000000000000000000000000000000000000000090830190815283516115ad8160018401602088016112f0565b01600101949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610385576103856115b9565b600181811c9082168061160f57607f821691505b602082108103611648577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b81810381811115610385576103856115b9565b60006020828403121561167357600080fd5b815180151581146103aa57600080fd5b600082516116958184602087016112f0565b919091019291505056fea26469706673582212206ac7b2845fe81d6b14fe87e0e88461cbd4615bde326254494368abcc7fddb91864736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "notice": "Emitted when the allowance of a {spender} for an {owner} is set to a new value. NOTE: {value} may be zero."
      },
      "Transfer(address,address,uint256)": {
        "notice": "Emitted when {value} tokens are moved from one address {from} to another {to}. NOTE: {value} may be zero."
      }
    },
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "notice": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "notice": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "notice": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "notice": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "symbol()": {
        "notice": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "notice": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "notice": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 293,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 297,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 303,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 307,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8696,
        "contract": "contracts/Planet.sol:Planet",
        "label": "_token",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20Metadata)279"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20Metadata)279": {
        "encoding": "inplace",
        "label": "contract IERC20Metadata",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}