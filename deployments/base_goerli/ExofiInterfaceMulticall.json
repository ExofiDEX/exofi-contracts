{
  "address": "0x1d2Be8683d3aa1C2457FF7b751F694b4819815F8",
  "abi": [
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ExofiInterfaceMulticall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ExofiInterfaceMulticall.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb1788240314256d3a27197da99051499047557788aa6c78a168a765643fba5f4",
  "receipt": {
    "to": null,
    "from": "0xB26cFbcC1626383375663a5Ac0ad191380C6f0CB",
    "contractAddress": "0x1d2Be8683d3aa1C2457FF7b751F694b4819815F8",
    "transactionIndex": 3,
    "gasUsed": "432949",
    "logsBloom": "0x
    "blockHash": "0x61eae9ec71961b07e0692a3b7358cb1fedb139e8b027696ab41662341924e60d",
    "transactionHash": "0xb1788240314256d3a27197da99051499047557788aa6c78a168a765643fba5f4",
    "logs": [],
    "blockNumber": 8449694,
    "cumulativeGasUsed": "580628",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ba8f8f4df632bb3d29f2601c8d9cc4a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ExofiInterfaceMulticall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct ExofiInterfaceMulticall.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A fork of Multicall2 specifically tailored for the Exofi Interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/ExofiInterfaceMulticall.sol\":\"ExofiInterfaceMulticall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/periphery/ExofiInterfaceMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\n/// @notice A fork of Multicall2 specifically tailored for the Exofi Interface\\ncontract ExofiInterfaceMulticall {\\n    struct Call {\\n        address target;\\n        uint256 gasLimit;\\n        bytes callData;\\n    }\\n\\n    struct Result {\\n        bool success;\\n        uint256 gasUsed;\\n        bytes returnData;\\n    }\\n\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n\\n    function multicall(Call[] memory calls) public returns (uint256 blockNumber, Result[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new Result[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (address target, uint256 gasLimit, bytes memory callData) =\\n                (calls[i].target, calls[i].gasLimit, calls[i].callData);\\n            uint256 gasLeftBefore = gasleft();\\n            (bool success, bytes memory ret) = target.call{gas: gasLimit}(callData);\\n            uint256 gasUsed = gasLeftBefore - gasleft();\\n            returnData[i] = Result(success, gasUsed, ret);\\n        }\\n    }\\n}\",\"keccak256\":\"0xe3686a50b939ccb2653a0151125d044bc437d513705a586d299c2c31f4a1f631\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e31461005b5780634d2301cc1461007c575b600080fd5b425b6040519081526020015b60405180910390f35b61006e610069366004610333565b6100a4565b6040516100529291906104e0565b61004861008a3660046105c0565b73ffffffffffffffffffffffffffffffffffffffff163190565b8051439060609067ffffffffffffffff8111156100c3576100c3610263565b60405190808252806020026020018201604052801561011057816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100e15790505b50905060005b835181101561025d576000806000868481518110610136576101366105e2565b602002602001015160000151878581518110610154576101546105e2565b602002602001015160200151888681518110610172576101726105e2565b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101b29190610611565b60006040518083038160008787f1925050503d80600081146101f0576040519150601f19603f3d011682016040523d82523d6000602084013e6101f5565b606091505b509150915060005a610207908561065c565b90506040518060600160405280841515815260200182815260200183815250898981518110610238576102386105e2565b602002602001018190525050505050505050808061025590610675565b915050610116565b50915091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102b5576102b5610263565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561030257610302610263565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461032e57600080fd5b919050565b6000602080838503121561034657600080fd5b823567ffffffffffffffff8082111561035e57600080fd5b818501915085601f83011261037257600080fd5b81358181111561038457610384610263565b8060051b6103938582016102bb565b91825283810185019185810190898411156103ad57600080fd5b86860192505b838310156104af578235858111156103cb5760008081fd5b860160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d0381018213156104025760008081fd5b61040a610292565b6104158b850161030a565b81526040848101358c8301529284013592898411156104345760008081fd5b83850194508e603f86011261044b57600093508384fd5b8b85013593508984111561046157610461610263565b6104718c84601f870116016102bb565b92508383528e818587010111156104885760008081fd5b838186018d85013760009383018c01939093529182015283525091860191908601906103b3565b9998505050505050505050565b60005b838110156104d75781810151838201526020016104bf565b50506000910152565b6000604080830185845260208281860152818651808452606093508387019150838160051b88010183890160005b838110156105b0578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0018552815180511515845286810151878501528801518884018890528051888501819052608061056f82828801858c016104bc565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169490940190930192509085019060010161050e565b50909a9950505050505050505050565b6000602082840312156105d257600080fd5b6105db8261030a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082516106238184602087016104bc565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561066f5761066f61062d565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106a6576106a661062d565b506001019056fea2646970667358221220d00048c45f6d59717b2fef723e45ef5d3d1db48d098f552c23395ad2ffe72d3b64736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e31461005b5780634d2301cc1461007c575b600080fd5b425b6040519081526020015b60405180910390f35b61006e610069366004610333565b6100a4565b6040516100529291906104e0565b61004861008a3660046105c0565b73ffffffffffffffffffffffffffffffffffffffff163190565b8051439060609067ffffffffffffffff8111156100c3576100c3610263565b60405190808252806020026020018201604052801561011057816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100e15790505b50905060005b835181101561025d576000806000868481518110610136576101366105e2565b602002602001015160000151878581518110610154576101546105e2565b602002602001015160200151888681518110610172576101726105e2565b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101b29190610611565b60006040518083038160008787f1925050503d80600081146101f0576040519150601f19603f3d011682016040523d82523d6000602084013e6101f5565b606091505b509150915060005a610207908561065c565b90506040518060600160405280841515815260200182815260200183815250898981518110610238576102386105e2565b602002602001018190525050505050505050808061025590610675565b915050610116565b50915091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102b5576102b5610263565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561030257610302610263565b604052919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461032e57600080fd5b919050565b6000602080838503121561034657600080fd5b823567ffffffffffffffff8082111561035e57600080fd5b818501915085601f83011261037257600080fd5b81358181111561038457610384610263565b8060051b6103938582016102bb565b91825283810185019185810190898411156103ad57600080fd5b86860192505b838310156104af578235858111156103cb5760008081fd5b860160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d0381018213156104025760008081fd5b61040a610292565b6104158b850161030a565b81526040848101358c8301529284013592898411156104345760008081fd5b83850194508e603f86011261044b57600093508384fd5b8b85013593508984111561046157610461610263565b6104718c84601f870116016102bb565b92508383528e818587010111156104885760008081fd5b838186018d85013760009383018c01939093529182015283525091860191908601906103b3565b9998505050505050505050565b60005b838110156104d75781810151838201526020016104bf565b50506000910152565b6000604080830185845260208281860152818651808452606093508387019150838160051b88010183890160005b838110156105b0578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0018552815180511515845286810151878501528801518884018890528051888501819052608061056f82828801858c016104bc565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169490940190930192509085019060010161050e565b50909a9950505050505050505050565b6000602082840312156105d257600080fd5b6105db8261030a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082516106238184602087016104bc565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561066f5761066f61062d565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106a6576106a661062d565b506001019056fea2646970667358221220d00048c45f6d59717b2fef723e45ef5d3d1db48d098f552c23395ad2ffe72d3b64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A fork of Multicall2 specifically tailored for the Exofi Interface",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}